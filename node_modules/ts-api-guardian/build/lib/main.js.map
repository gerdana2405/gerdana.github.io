{"version":3,"sources":["main.ts"],"names":[],"mappings":";AAAA,qBAA0B,MAAM,CAAC,CAAA;AACjC,IAAY,EAAE,WAAM,IAAI,CAAC,CAAA;AACzB,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,2BAA8C,cAAc,CAAC,CAAA;AAE7D,2BAA8C,cAAc,CAAC;AAA/B,2CAA+B;AAE7D,4BACI,UAAkB,EAAE,OAAe,EAAE,OAAkC;IAAlC,uBAAkC,GAAlC,YAAkC;IACzE,IAAM,MAAM,GAAG,sBAAS,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAC9C,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACvC,EAAE,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACpC,CAAC;AALe,0BAAkB,qBAKjC,CAAA;AAED,iCACI,UAAkB,EAAE,UAAkB,EAAE,OAAkC;IAAlC,uBAAkC,GAAlC,YAAkC;IAC5E,IAAM,MAAM,GAAG,sBAAS,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAC9C,IAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;IAExD,EAAE,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,IAAM,KAAK,GAAG,kBAAW,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC;QAExF,iCAAiC;QACjC,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAE/D,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;AACH,CAAC;AAfe,+BAAuB,0BAetC,CAAA;AAED,yBAAyB,GAAW;IAClC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACxB,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACnC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC;AACH,CAAC","file":"main.js","sourcesContent":["import {createPatch} from 'diff';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {SerializationOptions, publicApi} from './serializer';\n\nexport {SerializationOptions, publicApi} from './serializer';\n\nexport function generateGoldenFile(\n    entrypoint: string, outFile: string, options: SerializationOptions = {}): void {\n  const output = publicApi(entrypoint, options);\n  ensureDirectory(path.dirname(outFile));\n  fs.writeFileSync(outFile, output);\n}\n\nexport function verifyAgainstGoldenFile(\n    entrypoint: string, goldenFile: string, options: SerializationOptions = {}): string {\n  const actual = publicApi(entrypoint, options);\n  const expected = fs.readFileSync(goldenFile).toString();\n\n  if (actual === expected) {\n    return '';\n  } else {\n    const patch = createPatch(goldenFile, expected, actual, 'Golden file', 'Generated API');\n\n    // Remove the header of the patch\n    const start = patch.indexOf('\\n', patch.indexOf('\\n') + 1) + 1;\n\n    return patch.substring(start);\n  }\n}\n\nfunction ensureDirectory(dir: string) {\n  if (!fs.existsSync(dir)) {\n    ensureDirectory(path.dirname(dir));\n    fs.mkdirSync(dir);\n  }\n}\n"]}